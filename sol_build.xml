<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->

<project basedir="." default="build-service" name="sol_buid">
   
   <!-- Declaration of the main properties -->
	<property name="basedir" location="."/>
	<property name="xsd.dir" location="${basedir}/xsd"/>
	<property name="custom.dir" location="${basedir}/custom"/>
	<property name="gen.dir" location="${basedir}/generated"/>
	<property name="gen2.dir" location="${basedir}/generated2"/>
	<property name="build.dir" location="${basedir}/build"/>
	<property name="src.dir" location="${basedir}/src"/>
	<property name="lib.dir" location="${basedir}/lib"/>
	<property name="web_content.dir" location="${basedir}/WebContent"/>

	<property name="service.dir" location="${src.dir}/it/polito/dp2/NFV/sol3/service"/>
	<property name="client1.dir" location="${src.dir}/it/polito/dp2/NFV/sol3/client1"/>
	<property name="client2.dir" location="${src.dir}/it/polito/dp2/NFV/sol3/client2"/>

	<property name="web-inf.dir" location="${web_content.dir}/WEB-INF/classes/xsd"/>
	
	<!-- Declation of the the libray folder -->
	<property name="shared.location" location="/opt/dp2/shared"/>
	<property name="ext.lib.dir" location="${shared.location}/lib" />
	
	<!-- Java compiler settings -->
	<property name="debug" value="true" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />

	<!-- The classpath to be used for compilation of the solution -->
	<path id="sol.server.classpath">
		<pathelement location="${lib.dir}/NFV.jar"/>
		<pathelement location= "${lib.dir}/swagger-annotations-1.5.0.jar"/>
		<pathelement location= "${lib.dir}/swagger-core-1.5.0.jar"/>
		<pathelement location= "${lib.dir}/swagger-core-jaxrs-1.5.0.jar"/>
		<pathelement location= "${lib.dir}/swagger-jersey2-jaxr-1.5.0.jar"/>
		<pathelement location= "${lib.dir}/swagger-models-1.5.0.jar"/>
		<pathelement location= "${ext.lib.dir}/jersey-server-2.25.1.jar"/>
		<pathelement location="${ext.lib.dir}/javax.ws.rs-api-2.0.1.jar"/>
		<pathelement location="${ext.lib.dir}/jersey-client-1.19.1.jar"/>
		<pathelement location="${ext.lib.dir}/jersey-core-1.19.1.jar"/>
	</path>

	<path id ="sol.client.classpath">
		<pathelement location="${lib.dir}/NFV.jar"/>
		<pathelement location="${lib.dir}/lab3.jar"/>
		<pathelement location="${ext.lib.dir}/javax.ws.rs-api-2.0.1.jar"/>
		<pathelement location="${ext.lib.dir}/jersey-client-1.19.1.jar"/>
		<pathelement location="${ext.lib.dir}/jersey-core-1.19.1.jar"/>
	</path>


	<!-- init target -->
    <!--<target name="init">-->
        <!--<mkdir dir="bin"/>-->
        <!--<copy includeemptydirs="false" todir="bin">-->
            <!--<fileset dir="src">-->
                <!--<exclude name="**/*.java"/>-->
            <!--</fileset>-->
        <!--</copy>-->
    <!--</target>-->


	<!-- Generate all the artifacts needed to build the service -->
	<target name="generate-artifacts-for-service">
		
		<echo>create a generate folder</echo>
		<mkdir dir="${gen.dir}"/>
	
		<exec executable="xjc" failonerror="true" >
			<arg value="-d" />
			<arg value="${gen.dir}" />
			<arg value="-p" />
			<arg value="it.polito.dp2.NFV.sol3.service.ServiceXML" />
			<arg value="${xsd.dir}/NfvDeployer.xsd" />
		</exec>
		<touch file="${custom.dir}/.flagfile" />
		
		<exec executable="xjc" failonerror="true" >
			<arg value="-d" />
			<arg value="${gen.dir}" />
			<arg value="-p" />
			<arg value="it.polito.dp2.NFV.sol3.service.Neo4jSimpleXML" />
			<arg value="${xsd.dir}/Neo4JSimpleXML.xsd" />
		</exec>
		<touch file="${custom.dir}/.flagfile" />
	</target>

	<!-- Generate all the artifacts needed to build the service -->
	<target name="generate-artifacts-for-client">

		<echo>create a generate folder</echo>
		<mkdir dir="${gen2.dir}"/>

		<exec executable="xjc" failonerror="true" >
			<arg value="-d" />
			<arg value="${gen2.dir}" />
			<arg value="-p" />
			<arg value="it.polito.dp2.NFV.sol3.ServiceXML" />
			<arg value="${xsd.dir}/NfvDeployer.xsd" />
		</exec>
		<touch file="${custom.dir}/.flagfile" />
	</target>


	<target name="build-service" depends="generate-artifacts-for-service">
		<echo>Building the submitted solution (if needed)...</echo>
		<copy file="${xsd.dir}/NfvDeployer.xsd" tofile="${web_content.dir}/WEB-INF/classes/xsd/NfvDeployer.xsd"/>
		<javac destdir="${build.dir}" debug="${debug}" debuglevel="${debuglevel}" source="${source}" target="${target}" includeantruntime="false">
			<src path="${src.dir}"/>
			<src path="${gen.dir}"/>
			<include name="it/polito/dp2/NFV/sol3/**" />
			<exclude name="it/polito/dp2/NFV/sol3/client1/**"/>
			<exclude name="it/polito/dp2/NFV/sol3/client2/**"/>
			 <classpath>
				<path refid="sol.server.classpath" />
			</classpath>
		</javac>
		<echo>delete XML mapped class</echo>
		<delete dir="${gen.dir}"/>
		<echo>Done.</echo>
	</target>
	
	<target name="build-client" depends="generate-artifacts-for-client">
		<echo>Building the client number 1 and number 2</echo>
		<javac destdir="${build.dir}" debug="${debug}" debuglevel="${debuglevel}" source="${source}" target="${target}" includeantruntime="false">
			<src path="${src.dir}"/>
			<src path="${gen2.dir}"/>
			<include name="it/polito/dp2/NFV/sol3/**"/>
			<exclude name="it/polito/dp2/NFV/sol3/service/**"/>
			 <classpath>
				<path refid="sol.client.classpath"/>
			</classpath>
		</javac>
		<echo>delete XML mapped class</echo>
		<delete dir="${gen2.dir}"/>
		<echo>Done.</echo>
	</target>
	
</project>
